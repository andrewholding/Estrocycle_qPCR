range <- 1.5 * IQR(quantiles)
quantiles <- quantile(df$Enrichment[df$Time=="45 min"], probs = c(.10, .99))
range <- 1.5 * IQR(quantiles)
#tp3<-tp3[2:8,]
#tp2<-tp2[c(1:4,6:8),]
colnames(tp1)<-c("Enrichment","Time")
colnames(tp2)<-c("Enrichment","Time")
colnames(tp3)<-c("Enrichment","Time")
df<-rbind(tp1,tp2,tp3)
p <- ggboxplot(df, x = "Time", y = "Enrichment",
color = "Time", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Time",
outlier.shape=NA)
my_comparisons <- list(c("90 min", "0 min"), c("45 min", "0 min"),  c("45 min", "90 min") )
p + stat_compare_means(comparisons = my_comparisons,
method="wilcox",
label = "p-value",
method.args=list(alternative="greater")) # Add pairwise comparisons p-value
df
df<-rbind(tp1,tp2,tp3)
quantiles <- quantile(df$Enrichment[df$Time=="90 min"], probs = c(.10, .999))
range <- 1.5 * IQR(quantiles)
tp2<-tp2[!(df$Enrichment[df$Time=="90 min"]>median(df$Enrichment[df$Time=="90 min"])+IQR(df$Enrichment[df$Time=="90 min"])*2),]
tp1<-tp1[!(df$Enrichment[df$Time=="45 min"]>median(df$Enrichment[df$Time=="45 min"])+IQR(df$Enrichment[df$Time=="45 min"])*2),]
df<-rbind(tp1,tp2,tp3)
p <- ggboxplot(df, x = "Time", y = "Enrichment",
color = "Time", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Time",
outlier.shape=NA)
my_comparisons <- list(c("90 min", "0 min"), c("45 min", "0 min"),  c("45 min", "90 min") )
p + stat_compare_means(comparisons = my_comparisons,
method="wilcox",
label = "p-value",
method.args=list(alternative="greater")) # Add pairwise comparisons p-value
tp1<-cbind(df_ct["0 min"],rep("0 min",8))
tp2<-cbind(df_ct["45 mins"],rep("45 min",8))
tp3<-cbind(df_ct["90 mins"],rep("90 min",8))
colnames(tp1)<-c("Enrichment","Time")
colnames(tp2)<-c("Enrichment","Time")
colnames(tp3)<-c("Enrichment","Time")
df<-rbind(tp1,tp2,tp3)
(df$Enrichment[df$Time=="90 min"]>median(df$Enrichment[df$Time=="90 min"])+IQR(df$Enrichment[df$Time=="90 min"])*2)
(df$Enrichment[df$Time=="45 min"]>median(df$Enrichment[df$Time=="45 min"])+IQR(df$Enrichment[df$Time=="45 min"])*2)
tp2<-tp2[!(df$Enrichment[df$Time=="90 min"]>median(df$Enrichment[df$Time=="90 min"])+IQR(df$Enrichment[df$Time=="90 min"])*2),]
tp1<-tp1[!(df$Enrichment[df$Time=="45 min"]>median(df$Enrichment[df$Time=="45 min"])+IQR(df$Enrichment[df$Time=="45 min"])*2),]
df<-rbind(tp1,tp2,tp3)
p <- ggboxplot(df, x = "Time", y = "Enrichment",
color = "Time", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Time",
outlier.shape=NA)
my_comparisons <- list(c("90 min", "0 min"), c("45 min", "0 min"),  c("45 min", "90 min") )
p + stat_compare_means(comparisons = my_comparisons,
method="wilcox",
label = "p-value",
method.args=list(alternative="greater")) # Add pairwise comparisons p-value
tp2
df<-rbind(tp1,tp2,tp3)
p <- ggboxplot(df, x = "Time", y = "Enrichment",
color = "Time", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Time",
outlier.shape=NA)
my_comparisons <- list(c("90 min", "0 min"), c("45 min", "0 min"),  c("45 min", "90 min") )
p + stat_compare_means(comparisons = my_comparisons,
method="wilcox",
label = "p-value",
method.args=list(alternative="greater")) # Add pairwise comparisons p-value
tp2
df
rm(df)
tp1
tp2
tp3
df<-rbind(tp1,tp2,tp3)
df
library("ggpubr")
tp1<-cbind(df_ct["0 min"],rep("0 min",8))
tp2<-cbind(df_ct["45 mins"],rep("45 min",8))
tp3<-cbind(df_ct["90 mins"],rep("90 min",8))
colnames(tp1)<-c("Enrichment","Time")
colnames(tp2)<-c("Enrichment","Time")
colnames(tp3)<-c("Enrichment","Time")
df<-rbind(tp1,tp2,tp3)
#Test for outliers, nothing 2*IQR from median
(df$Enrichment[df$Time=="90 min"]>median(df$Enrichment[df$Time=="90 min"])+IQR(df$Enrichment[df$Time=="90 min"])*2)
(df$Enrichment[df$Time=="45 min"]>median(df$Enrichment[df$Time=="45 min"])+IQR(df$Enrichment[df$Time=="45 min"])*2)
tp3<-tp3[!(df$Enrichment[df$Time=="90 min"]>median(df$Enrichment[df$Time=="90 min"])+IQR(df$Enrichment[df$Time=="90 min"])*2),]
tp2<-tp2[!(df$Enrichment[df$Time=="45 min"]>median(df$Enrichment[df$Time=="45 min"])+IQR(df$Enrichment[df$Time=="45 min"])*2),]
df<-rbind(tp1,tp2,tp3)
p <- ggboxplot(df, x = "Time", y = "Enrichment",
color = "Time", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Time",
outlier.shape=NA)
my_comparisons <- list(c("90 min", "0 min"), c("45 min", "0 min"),  c("45 min", "90 min") )
p + stat_compare_means(comparisons = my_comparisons,
method="wilcox",
label = "p-value",
method.args=list(alternative="greater")) # Add pairwise comparisons p-value
---
title: "Estrogen Receptor Alpha aPCR Timeseries"
author: "Andrew Holding"
date: "1/22/2018"
output: pdf_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
##Delta-delta ct Calculation
```{r}
#Set varibles to make time points easier to spot
time0 <- 1
time45 <- 2
time90 <- 3
#Input raw data
qpcr <- list()
qpcr[[time0]] <- read.table("qpcr-0.txt",
header = T,
sep = "\t",
as.is = T)
qpcr[[time45]] <-
read.table("qpcr-45.txt",
header = T,
sep = "\t",
as.is = T)
qpcr[[time90]] <-
read.table("qpcr-90.txt",
header = T,
sep = "\t",
as.is = T)
for (time_point in time0:time90)
{
qpcr[[time_point]][qpcr[[time_point]] == "No Ct"] <- NA
}
#Prepare lists
ct_values <- list()
ct_values_means <- list()
d_ct_values_means <- list()
input_values <- list()
input_mean <- list()
d_input_mean <- list()
dd_ct_values_means <- list()
for (time_point in time0:time90)
{
#Create object
ct_values[[time_point]] <- matrix(NA, 0, 2)
#Add reps 1:8 to object
for (rep in 1:8) {
y_coord <- rep * 12 - 11
ct_values[[time_point]] <- rbind(ct_values[[time_point]],
cbind(
as.numeric(qpcr[[time_point]]$Ct..dR[y_coord:(y_coord + 4)]),
as.numeric(qpcr[[time_point]]$Ct..dR[(y_coord + 5):(y_coord +
9)])
))
}
#Average techical reps from same isogenic replicate
ct_values_means[[time_point]] <- matrix(NA, 0, 2)
for (rep in 1:8) {
y_coord <- rep * 5 - 4
ct_values_means[[time_point]] <-
rbind(ct_values_means[[time_point]], colMeans(ct_values[[time_point]][y_coord:(y_coord +
4), 1:2]))
}
#Import Input from time_point mins
input_values[[time_point]] <- cbind(as.numeric(qpcr[[time_point]]$Ct..dR[12 *
(0:4) + 11]),
as.numeric(qpcr[[time_point]]$Ct..dR[12 *
(0:4) + 12]))
#Calucate Average of technical reps.
input_mean[[time_point]] <-
colMeans(input_values[[time_point]], na.rm = T)
if (time_point == 2)
{
#Plate layout is reversed wrt control and target primers. See lab book.
d_ct_values_means[[time_point]] <-
ct_values_means[[time_point]][, 2] - ct_values_means[[time_point]][, 1]
d_input_mean[[time_point]] <-
input_mean[[time_point]][2] - input_mean[[time_point]][1]
dd_ct_values_means[[time_point]] <-
d_ct_values_means[[time_point]] - d_input_mean[[time_point]]
} else {
d_ct_values_means[[time_point]] <-
ct_values_means[[time_point]][, 1] - ct_values_means[[time_point]][, 2]
d_input_mean[[time_point]] <-
input_mean[[time_point]][1] - input_mean[[time_point]][2]
dd_ct_values_means[[time_point]] <-
d_ct_values_means[[time_point]] - d_input_mean[[time_point]]
}
}
df_ct <- data.frame(cbind(
2 ^ dd_ct_values_means[[time0]],
2 ^ dd_ct_values_means[[time45]],
2 ^ dd_ct_values_means[[time90]]
))
colnames(df_ct) <- c("0 min", "45 mins", "90 mins")
```
##Box plot of Raw Data
```{r,  fig.cap="Box Plot showing ChIP enrichment over control loci for ER at 0, 45 and 90 minutes after stimuation with 100nM E2"}
set.seed(1)
par(mar = c(5, 5, 3, 1))
boxplot(
df_ct,
main = "ER-alpha occupany of the TFF1 promoter",
range = 1,
ylab = expression(paste(
"Enrichment over Input, 2" ^ "delta-delta-Ct"
)),
xlab = "Time point",
pch = NA
)
stripchart(
df_ct,
add = T,
vertical = T,
pch = 20,
method = "jitter",
jitter = 0.05
)
```
##Box plot of data filtered for outliers
```{r, fig.cap="Box Plot showing ChIP enrichment over control loci for ER at 0, 45 and 90 minutes after stimuation with 100nM E2"}
library("ggpubr")
tp1<-cbind(df_ct["0 min"],rep("0 min",8))
tp2<-cbind(df_ct["45 mins"],rep("45 min",8))
tp3<-cbind(df_ct["90 mins"],rep("90 min",8))
colnames(tp1)<-c("Enrichment","Time")
colnames(tp2)<-c("Enrichment","Time")
colnames(tp3)<-c("Enrichment","Time")
df<-rbind(tp1,tp2,tp3)
#Test for outliers, nothing 2*IQR from median
(df$Enrichment[df$Time=="90 min"]>median(df$Enrichment[df$Time=="90 min"])+IQR(df$Enrichment[df$Time=="90 min"])*2)
(df$Enrichment[df$Time=="45 min"]>median(df$Enrichment[df$Time=="45 min"])+IQR(df$Enrichment[df$Time=="45 min"])*2)
#Code to remove data points more than 2*IQR from median. P-value are one-sided Wilcoxon rank test. Looks better but makes little differnce
#tp3<-tp3[!(df$Enrichment[df$Time=="90 min"]>median(df$Enrichment[df$Time=="90 min"])+IQR(df$Enrichment[df$Time=="90 min"])*2),]
#tp2<-tp2[!(df$Enrichment[df$Time=="45 min"]>median(df$Enrichment[df$Time=="45 min"])+IQR(df$Enrichment[df$Time=="45 min"])*2),]
df<-rbind(tp1,tp2,tp3)
p <- ggboxplot(df, x = "Time", y = "Enrichment",
color = "Time", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Time",
outlier.shape=NA)
my_comparisons <- list(c("90 min", "0 min"), c("45 min", "0 min"),  c("45 min", "90 min") )
p + stat_compare_means(comparisons = my_comparisons,
method="t.test",
label = "p-value",
method.args=list(alternative="greater")) # Add pairwise comparisons p-value
```
p + stat_compare_means(comparisons = my_comparisons,
method="t.test",
label = "p-value",
method.args=list(alternative="greater"))
tp3<-tp3[!(df$Enrichment[df$Time=="90 min"]>median(df$Enrichment[df$Time=="90 min"])+IQR(df$Enrichment[df$Time=="90 min"])*2),]
df<-rbind(tp1,tp2,tp3)
p <- ggboxplot(df, x = "Time", y = "Enrichment",
color = "Time", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Time",
outlier.shape=NA)
my_comparisons <- list(c("90 min", "0 min"), c("45 min", "0 min"),  c("45 min", "90 min") )
p + stat_compare_means(comparisons = my_comparisons,
method="t.test",
label = "p-value",
method.args=list(alternative="greater"))
p + stat_compare_means(comparisons = my_comparisons,
method="t.test",
label = "p-value",
method.args=list(alternative="greater"))
p + stat_compare_means(comparisons = my_comparisons,
method="t.test",
label = "p-value",
method.args=list(alternative="greater"))
p + stat_compare_means(comparisons = my_comparisons,
method="t.test",
label = "p-value",
method.args=list(alternative="greater"))
---
title: "Estrogen Receptor Alpha aPCR Timeseries"
author: "Andrew Holding"
date: "1/22/2018"
output: pdf_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
##Delta-delta ct Calculation
```{r}
#Set varibles to make time points easier to spot
time0 <- 1
time45 <- 2
time90 <- 3
#Input raw data
qpcr <- list()
qpcr[[time0]] <- read.table("qpcr-0.txt",
header = T,
sep = "\t",
as.is = T)
qpcr[[time45]] <-
read.table("qpcr-45.txt",
header = T,
sep = "\t",
as.is = T)
qpcr[[time90]] <-
read.table("qpcr-90.txt",
header = T,
sep = "\t",
as.is = T)
for (time_point in time0:time90)
{
qpcr[[time_point]][qpcr[[time_point]] == "No Ct"] <- NA
}
#Prepare lists
ct_values <- list()
ct_values_means <- list()
d_ct_values_means <- list()
input_values <- list()
input_mean <- list()
d_input_mean <- list()
dd_ct_values_means <- list()
for (time_point in time0:time90)
{
#Create object
ct_values[[time_point]] <- matrix(NA, 0, 2)
#Add reps 1:8 to object
for (rep in 1:8) {
y_coord <- rep * 12 - 11
ct_values[[time_point]] <- rbind(ct_values[[time_point]],
cbind(
as.numeric(qpcr[[time_point]]$Ct..dR[y_coord:(y_coord + 4)]),
as.numeric(qpcr[[time_point]]$Ct..dR[(y_coord + 5):(y_coord +
9)])
))
}
#Average techical reps from same isogenic replicate
ct_values_means[[time_point]] <- matrix(NA, 0, 2)
for (rep in 1:8) {
y_coord <- rep * 5 - 4
ct_values_means[[time_point]] <-
rbind(ct_values_means[[time_point]], colMeans(ct_values[[time_point]][y_coord:(y_coord +
4), 1:2]))
}
#Import Input from time_point mins
input_values[[time_point]] <- cbind(as.numeric(qpcr[[time_point]]$Ct..dR[12 *
(0:4) + 11]),
as.numeric(qpcr[[time_point]]$Ct..dR[12 *
(0:4) + 12]))
#Calucate Average of technical reps.
input_mean[[time_point]] <-
colMeans(input_values[[time_point]], na.rm = T)
if (time_point == 2)
{
#Plate layout is reversed wrt control and target primers. See lab book.
d_ct_values_means[[time_point]] <-
ct_values_means[[time_point]][, 2] - ct_values_means[[time_point]][, 1]
d_input_mean[[time_point]] <-
input_mean[[time_point]][2] - input_mean[[time_point]][1]
dd_ct_values_means[[time_point]] <-
d_ct_values_means[[time_point]] - d_input_mean[[time_point]]
} else {
d_ct_values_means[[time_point]] <-
ct_values_means[[time_point]][, 1] - ct_values_means[[time_point]][, 2]
d_input_mean[[time_point]] <-
input_mean[[time_point]][1] - input_mean[[time_point]][2]
dd_ct_values_means[[time_point]] <-
d_ct_values_means[[time_point]] - d_input_mean[[time_point]]
}
}
df_ct <- data.frame(cbind(
2 ^ dd_ct_values_means[[time0]],
2 ^ dd_ct_values_means[[time45]],
2 ^ dd_ct_values_means[[time90]]
))
colnames(df_ct) <- c("0 min", "45 mins", "90 mins")
```
##Box plot of Raw Data
```{r,  fig.cap="Box Plot showing ChIP enrichment over control loci for ER at 0, 45 and 90 minutes after stimuation with 100nM E2"}
set.seed(1)
par(mar = c(5, 5, 3, 1))
boxplot(
df_ct,
main = "ER-alpha occupany of the TFF1 promoter",
range = 1,
ylab = expression(paste(
"Enrichment over Input, 2" ^ "delta-delta-Ct"
)),
xlab = "Time point",
pch = NA
)
stripchart(
df_ct,
add = T,
vertical = T,
pch = 20,
method = "jitter",
jitter = 0.05
)
```
##Box plot of data filtered for outliers
```{r, fig.cap="Box Plot showing ChIP enrichment over control loci for ER at 0, 45 and 90 minutes after stimuation with 100nM E2"}
library("ggpubr")
tp1<-cbind(df_ct["0 min"],rep("0 min",8))
tp2<-cbind(df_ct["45 mins"],rep("45 min",8))
tp3<-cbind(df_ct["90 mins"],rep("90 min",8))
colnames(tp1)<-c("Enrichment","Time")
colnames(tp2)<-c("Enrichment","Time")
colnames(tp3)<-c("Enrichment","Time")
df<-rbind(tp1,tp2,tp3)
#Test for outliers, nothing 2*IQR from median
(df$Enrichment[df$Time=="90 min"]>median(df$Enrichment[df$Time=="90 min"])+IQR(df$Enrichment[df$Time=="90 min"])*2)
(df$Enrichment[df$Time=="45 min"]>median(df$Enrichment[df$Time=="45 min"])+IQR(df$Enrichment[df$Time=="45 min"])*2)
#Code to remove data points more than 2*IQR from median. P-value are one-sided Wilcoxon rank test. Looks better but makes little differnce
#tp3<-tp3[!(df$Enrichment[df$Time=="90 min"]>median(df$Enrichment[df$Time=="90 min"])+IQR(df$Enrichment[df$Time=="90 min"])*2),]
#tp2<-tp2[!(df$Enrichment[df$Time=="45 min"]>median(df$Enrichment[df$Time=="45 min"])+IQR(df$Enrichment[df$Time=="45 min"])*2),]
df<-rbind(tp1,tp2,tp3)
p <- ggboxplot(df, x = "Time", y = "Enrichment",
color = "Time", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Time",
outlier.shape=NA,
main = "ER-alpha occupany of the TFF1 promoter",
ylab = expression(paste("Enrichment over Input, 2" ^ "delta-delta-Ct" )),
xlab = "Time point")
my_comparisons <- list(c("90 min", "0 min"), c("45 min", "0 min"),  c("45 min", "90 min") )
p + stat_compare_means(comparisons = my_comparisons,
method="t.test",
label = "p-value",
method.args=list(alternative="greater"))
```
knitr::opts_chunk$set(echo = TRUE)
p <- ggboxplot(df, x = "Time", y = "Enrichment",
color = "Time", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Time",
outlier.shape=NA,
main = "ER-alpha occupany of the TFF1 promoter",
ylab = "Enrichment over Input",
xlab = "Time point",
legend=NA)
p + stat_compare_means(comparisons = my_comparisons,
method="t.test",
label = "p-value",
method.args=list(alternative="greater"))
p <- ggboxplot(df, x = "Time", y = "Enrichment",
color = "Time", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Time",
outlier.shape=NA,
main = "ER-alpha occupany of the TFF1 promoter",
ylab = "Enrichment over Input",
xlab = "Time point",
legend=NA)
p <- ggboxplot(df, x = "Time", y = "Enrichment",
color = "Time", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Time",
outlier.shape=NA,
main = "ER-alpha occupany of the TFF1 promoter",
ylab = "Enrichment over Input",
xlab = "Time point",
show.legend=FALSE)
my_comparisons <- list(c("90 min", "0 min"), c("45 min", "0 min"),  c("45 min", "90 min") )
p + stat_compare_means(comparisons = my_comparisons,
method="t.test",
label = "p-value",
method.args=list(alternative="greater"))
p + stat_compare_means(comparisons = my_comparisons,
method="t.test",
label = "p-value",
show.legend=FALSE,
method.args=list(alternative="greater"))
p <- ggboxplot(df, x = "Time", y = "Enrichment",
color = "Time", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Time",
outlier.shape=NA,
main = "ER-alpha occupany of the TFF1 promoter",
ylab = "Enrichment over Input",
xlab = "Time point",
show.legend=FALSE)
p
p <- ggboxplot(df, x = "Time", y = "Enrichment",
color = "Time", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Time",
outlier.shape=NA,
main = "ER-alpha occupany of the TFF1 promoter",
ylab = "Enrichment over Input",
xlab = "Time point",
show.legend=FALSE) +theme(legend.position="top")
p
p <- ggboxplot(df, x = "Time", y = "Enrichment",
color = "Time", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Time",
outlier.shape=NA,
main = "ER-alpha occupany of the TFF1 promoter",
ylab = "Enrichment over Input",
xlab = "Time point",
show.legend=FALSE) +theme(legend.position="bottom")
p
p <- ggboxplot(df, x = "Time", y = "Enrichment",
color = "Time", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Time",
outlier.shape=NA,
main = "ER-alpha occupany of the TFF1 promoter",
ylab = "Enrichment over Input",
xlab = "Time point",
show.legend=FALSE) +theme(legend.position="node")
p <- ggboxplot(df, x = "Time", y = "Enrichment",
color = "Time", palette =c("#00AFBB", "#E7B800", "#FC4E07"),
add = "jitter", shape = "Time",
outlier.shape=NA,
main = "ER-alpha occupany of the TFF1 promoter",
ylab = "Enrichment over Input",
xlab = "Time point",
show.legend=FALSE) +theme(legend.position="none")
p
my_comparisons <- list(c("90 min", "0 min"), c("45 min", "0 min"),  c("45 min", "90 min") )
p + stat_compare_means(comparisons = my_comparisons,
method="t.test",
label = "p-value",
show.legend=FALSE,
method.args=list(alternative="greater"))
